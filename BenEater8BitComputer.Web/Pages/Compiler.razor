@page "/compiler"
@using BenEater8BitComputer.Compiler
@using System.Text

<PageTitle>Compiler</PageTitle>

<h1>Compiler</h1>

<EditForm Model="model">

    <p>
        <label>
            Input:<br />
            <InputTextArea @bind-Value="model.Input" style="width:300px; height: 200px;"></InputTextArea>
        </label>
    </p>

    <button class="btn btn-primary" @onclick="Compile">Compile</button>

</EditForm>
<br />

<h3>Output:</h3>
@if (output is not null)
{
    <textarea style="width:300px; height: 200px;">@output</textarea>
}

@code {
    private CompilerModel model = new CompilerModel();

    private string output;

    void Compile()
    {
        try
        {
            var program = Program.Parse(model.Input);

            if (program.Diagnostics.Any())
            {
                var errors = program.Diagnostics
                    .Select(d =>
                        {
                            var (lineNumber, column) = program.Text.GetLineNumberAndColumn(d.Span);
                            return $"Error: {d.Message} Line: {lineNumber}, Column: {column}.";
                        })
                    .ToArray();
                output = string.Join(Environment.NewLine, errors);
                return;
            }

            var assembler = new Assembler(program);
            var result = assembler.Emit();

            if (!string.IsNullOrWhiteSpace(result.Error))
            {
                output = result.Error;
                return;
            }

            var sb = new StringBuilder(result.Output.Length);
            for (int i = 0; i < result.Output.Length; i++)
            {
                var data = result.Output[i];
                sb.Append($"0x{data:X2} ");
            }

            output = sb.ToString();
        }
        catch (Exception ex)
        {
            output = $"Error: {ex.Message}";
        }
    }
}
